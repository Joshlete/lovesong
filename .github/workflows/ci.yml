name: CI/CD Pipeline

# 🧭 Branching Strategy:
# main (production) - Full CI + deployment
# develop (integration) - Full CI for team testing  
# feature/* - CI validation before merge
# bugfix/* - CI validation for fixes

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
      - 'bugfix/**'
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DB_CONNECTION: pgsql
      DB_HOST: 127.0.0.1
      DB_PORT: 5432
      DB_DATABASE: testdb
      DB_USERNAME: testuser
      DB_PASSWORD: testpass
      APP_ENV: testing

    steps:
      - uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: pdo_pgsql

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Node dependencies
        run: npm ci

      - name: Build assets
        run: npm run build

      - name: Prepare Laravel
        run: |
          cp .env.example .env
          php artisan key:generate
          php artisan migrate --force

      - name: 🔍 Verify Jetstream Installation
        run: |
          echo "🔍 Verifying Jetstream components..."
          
          # Check if Jetstream config exists
          if [ ! -f "config/jetstream.php" ]; then
            echo "❌ Jetstream config not found"
            exit 1
          fi
          echo "✅ Jetstream config found"
          
          # Check if Fortify config exists
          if [ ! -f "config/fortify.php" ]; then
            echo "❌ Fortify config not found"
            exit 1
          fi
          echo "✅ Fortify config found"
          
          # Check if authentication views exist
          if [ ! -f "resources/views/auth/login.blade.php" ]; then
            echo "❌ Login view not found"
            exit 1
          fi
          echo "✅ Login view found"
          
          if [ ! -f "resources/views/auth/register.blade.php" ]; then
            echo "❌ Register view not found"
            exit 1
          fi
          echo "✅ Register view found"
          
          # Check if dashboard view exists
          if [ ! -f "resources/views/dashboard.blade.php" ]; then
            echo "❌ Dashboard view not found"
            exit 1
          fi
          echo "✅ Dashboard view found"
          
          # Check if Jetstream service provider is registered
          if ! grep -q "JetstreamServiceProvider" bootstrap/providers.php; then
            echo "❌ JetstreamServiceProvider not registered"
            exit 1
          fi
          echo "✅ JetstreamServiceProvider registered"
          
          # Check if Tailwind config exists
          if [ ! -f "tailwind.config.js" ]; then
            echo "❌ Tailwind config not found"
            exit 1
          fi
          echo "✅ Tailwind config found"
          
          echo "🎉 All Jetstream components verified successfully!"

      - name: Run tests
        run: php artisan test
        
      - name: 📊 Test Results
        if: always()
        run: |
          echo "✅ Tests completed for branch: ${{ github.ref_name }}"
          echo "🔗 Commit: ${{ github.sha }}"

  deploy:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: 🎯 Production Deployment
        run: |
          echo "🚀 Deploying to production..."
          echo "✅ Branch: ${{ github.ref_name }}"
          echo "✅ Commit: ${{ github.sha }}"
          echo "✅ Deployment successful!"
          # Add your actual deployment commands here:
          # - Build production assets
          # - Deploy to server
          # - Run production migrations
          # - Clear caches
